{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/breno/OneDrive/Projetos/futbeer/src/app/api/jogadores/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\r\nimport fs from 'fs'\r\nimport path from 'path'\r\nimport { Jogador } from '@/app/types'\r\n\r\nconst jsonPath = path.resolve(process.cwd(), 'src/app/data/jogadores.json')\r\n\r\nexport const config = {\r\n  runtime: 'node',\r\n}\r\n\r\nexport async function GET() {\r\n  try {\r\n    const data = fs.readFileSync(jsonPath, 'utf-8')\r\n    const jogadores: Jogador[] = JSON.parse(data)\r\n    return NextResponse.json(jogadores)\r\n  } catch (error) {\r\n    console.error('Erro ao ler jogadores:', error)\r\n    return NextResponse.json({ error: 'Erro ao ler jogadores' }, { status: 500 })\r\n  }\r\n}\r\n\r\nexport async function POST(request: Request) {\r\n  try {\r\n    const novoJogador: Omit<Jogador, 'id'> = await request.json()\r\n    const data = fs.readFileSync(jsonPath, 'utf-8')\r\n    const jogadores: Jogador[] = JSON.parse(data)\r\n\r\n    const maiorId = jogadores.reduce((max, j) => {\r\n      const idNum = Number(j.id)\r\n      return idNum > max ? idNum : max\r\n    }, 0)\r\n\r\n    const novoId = (maiorId + 1).toString()\r\n\r\n    const jogadorComId: Jogador = { ...novoJogador, id: novoId }\r\n    jogadores.push(jogadorComId)\r\n\r\n    fs.writeFileSync(jsonPath, JSON.stringify(jogadores, null, 2))\r\n\r\n    return NextResponse.json(jogadorComId, { status: 201 })\r\n  } catch (error) {\r\n    console.error('Erro ao salvar jogador:', error)\r\n    return NextResponse.json({ error: 'Erro ao salvar jogador' }, { status: 500 })\r\n  }\r\n}\r\n\r\nexport async function PUT(request: Request) {\r\n  try {\r\n    const jogadorAtualizado: Jogador = await request.json()\r\n    if (!jogadorAtualizado.id) {\r\n      return NextResponse.json({ error: 'ID do jogador é obrigatório' }, { status: 400 })\r\n    }\r\n\r\n    const data = fs.readFileSync(jsonPath, 'utf-8')\r\n    const jogadores: Jogador[] = JSON.parse(data)\r\n\r\n    const index = jogadores.findIndex((j) => j.id === jogadorAtualizado.id)\r\n    if (index === -1) {\r\n      return NextResponse.json({ error: 'Jogador não encontrado' }, { status: 404 })\r\n    }\r\n\r\n    jogadores[index] = jogadorAtualizado\r\n\r\n    fs.writeFileSync(jsonPath, JSON.stringify(jogadores, null, 2))\r\n\r\n    return NextResponse.json(jogadorAtualizado)\r\n  } catch (error) {\r\n    console.error('Erro ao atualizar jogador:', error)\r\n    return NextResponse.json({ error: 'Erro ao atualizar jogador' }, { status: 500 })\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;;;;AAGA,MAAM,WAAW,iGAAA,CAAA,UAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI;AAEtC,MAAM,SAAS;IACpB,SAAS;AACX;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,OAAO,6FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,UAAU;QACvC,MAAM,YAAuB,KAAK,KAAK,CAAC;QACxC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC7E;AACF;AAEO,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,cAAmC,MAAM,QAAQ,IAAI;QAC3D,MAAM,OAAO,6FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,UAAU;QACvC,MAAM,YAAuB,KAAK,KAAK,CAAC;QAExC,MAAM,UAAU,UAAU,MAAM,CAAC,CAAC,KAAK;YACrC,MAAM,QAAQ,OAAO,EAAE,EAAE;YACzB,OAAO,QAAQ,MAAM,QAAQ;QAC/B,GAAG;QAEH,MAAM,SAAS,CAAC,UAAU,CAAC,EAAE,QAAQ;QAErC,MAAM,eAAwB;YAAE,GAAG,WAAW;YAAE,IAAI;QAAO;QAC3D,UAAU,IAAI,CAAC;QAEf,6FAAA,CAAA,UAAE,CAAC,aAAa,CAAC,UAAU,KAAK,SAAS,CAAC,WAAW,MAAM;QAE3D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,cAAc;YAAE,QAAQ;QAAI;IACvD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAyB,GAAG;YAAE,QAAQ;QAAI;IAC9E;AACF;AAEO,eAAe,IAAI,OAAgB;IACxC,IAAI;QACF,MAAM,oBAA6B,MAAM,QAAQ,IAAI;QACrD,IAAI,CAAC,kBAAkB,EAAE,EAAE;YACzB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA8B,GAAG;gBAAE,QAAQ;YAAI;QACnF;QAEA,MAAM,OAAO,6FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,UAAU;QACvC,MAAM,YAAuB,KAAK,KAAK,CAAC;QAExC,MAAM,QAAQ,UAAU,SAAS,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK,kBAAkB,EAAE;QACtE,IAAI,UAAU,CAAC,GAAG;YAChB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAyB,GAAG;gBAAE,QAAQ;YAAI;QAC9E;QAEA,SAAS,CAAC,MAAM,GAAG;QAEnB,6FAAA,CAAA,UAAE,CAAC,aAAa,CAAC,UAAU,KAAK,SAAS,CAAC,WAAW,MAAM;QAE3D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA4B,GAAG;YAAE,QAAQ;QAAI;IACjF;AACF","debugId":null}}]
}