{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/breno/OneDrive/Projetos/futbeer/src/app/api/partidas/%5Bid%5D/route.ts"],"sourcesContent":["import fs from 'fs';\r\nimport path from 'path';\r\n\r\nconst jsonPath = path.resolve(process.cwd(), 'src/app/data/partidas.json');\r\n\r\nexport const config = {\r\n  runtime: 'node',\r\n};\r\n\r\nexport async function DELETE(_: Request, { params }: { params: Promise<{ id: string }> }) {\r\n  try {\r\n    const { id } = await params;\r\n\r\n    const data = fs.readFileSync(jsonPath, 'utf-8');\r\n    let partidas = JSON.parse(data);\r\n\r\n    partidas = partidas.filter((p: { id: string }) => p.id !== id);\r\n\r\n    fs.writeFileSync(jsonPath, JSON.stringify(partidas, null, 2));\r\n\r\n    return new Response(JSON.stringify({ message: 'Partida excluída com sucesso' }), { status: 200 });\r\n  } catch (error) {\r\n    console.error('Erro no DELETE:', (error as Error).message);\r\n    return new Response(JSON.stringify({ error: 'Erro ao deletar partida' }), { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function PUT(req: Request, { params }: { params: Promise<{ id: string }> }) {\r\n  try {\r\n    const { id } = await params;\r\n    const body = await req.json();\r\n\r\n    const data = fs.readFileSync(jsonPath, 'utf-8');\r\n    const partidas = JSON.parse(data);\r\n\r\n    const index = partidas.findIndex((p: { id: string }) => p.id === id);\r\n\r\n    if (index === -1) {\r\n      return new Response(JSON.stringify({ error: 'Partida não encontrada' }), { status: 404 });\r\n    }\r\n\r\n    // Atualiza a partida existente com os novos dados do body\r\n    partidas[index] = { ...partidas[index], ...body };\r\n\r\n    fs.writeFileSync(jsonPath, JSON.stringify(partidas, null, 2));\r\n\r\n    return new Response(JSON.stringify(partidas[index]), {\r\n      status: 200,\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n  } catch (error) {\r\n    console.error('Erro no PUT:', (error as Error).message);\r\n    return new Response(JSON.stringify({ error: 'Erro ao atualizar partida' }), { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;AAEA,MAAM,WAAW,iGAAA,CAAA,UAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI;AAEtC,MAAM,SAAS;IACpB,SAAS;AACX;AAEO,eAAe,OAAO,CAAU,EAAE,EAAE,MAAM,EAAuC;IACtF,IAAI;QACF,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM;QAErB,MAAM,OAAO,6FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,UAAU;QACvC,IAAI,WAAW,KAAK,KAAK,CAAC;QAE1B,WAAW,SAAS,MAAM,CAAC,CAAC,IAAsB,EAAE,EAAE,KAAK;QAE3D,6FAAA,CAAA,UAAE,CAAC,aAAa,CAAC,UAAU,KAAK,SAAS,CAAC,UAAU,MAAM;QAE1D,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;YAAE,SAAS;QAA+B,IAAI;YAAE,QAAQ;QAAI;IACjG,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mBAAmB,AAAC,MAAgB,OAAO;QACzD,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;YAAE,OAAO;QAA0B,IAAI;YAAE,QAAQ;QAAI;IAC1F;AACF;AAEO,eAAe,IAAI,GAAY,EAAE,EAAE,MAAM,EAAuC;IACrF,IAAI;QACF,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM;QACrB,MAAM,OAAO,MAAM,IAAI,IAAI;QAE3B,MAAM,OAAO,6FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,UAAU;QACvC,MAAM,WAAW,KAAK,KAAK,CAAC;QAE5B,MAAM,QAAQ,SAAS,SAAS,CAAC,CAAC,IAAsB,EAAE,EAAE,KAAK;QAEjE,IAAI,UAAU,CAAC,GAAG;YAChB,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;gBAAE,OAAO;YAAyB,IAAI;gBAAE,QAAQ;YAAI;QACzF;QAEA,0DAA0D;QAC1D,QAAQ,CAAC,MAAM,GAAG;YAAE,GAAG,QAAQ,CAAC,MAAM;YAAE,GAAG,IAAI;QAAC;QAEhD,6FAAA,CAAA,UAAE,CAAC,aAAa,CAAC,UAAU,KAAK,SAAS,CAAC,UAAU,MAAM;QAE1D,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC,QAAQ,CAAC,MAAM,GAAG;YACnD,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;QAChD;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gBAAgB,AAAC,MAAgB,OAAO;QACtD,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;YAAE,OAAO;QAA4B,IAAI;YAAE,QAAQ;QAAI;IAC5F;AACF","debugId":null}}]
}