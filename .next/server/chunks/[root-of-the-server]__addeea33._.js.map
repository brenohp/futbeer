{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/breno/OneDrive/Projetos/futbeer/src/lib/supabaseClient.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\r\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM;AACN,MAAM;AAEC,MAAM,WAAW,CAAA,GAAA,yLAAA,CAAA,eAAY,AAAD,EAAE,aAAa","debugId":null}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/breno/OneDrive/Projetos/futbeer/src/app/api/jogadores/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\r\nimport { supabase } from '@/lib/supabaseClient'\r\nimport { Jogador } from '@/app/types'\r\n\r\nexport const config = {\r\n  runtime: 'node',\r\n}\r\n\r\nexport async function GET() {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('jogadores')\r\n      .select('*')\r\n      .order('id', { ascending: true })\r\n\r\n    if (error) throw error\r\n\r\n    const jogadores = data ?? []\r\n\r\n    return NextResponse.json(jogadores)\r\n  } catch (error) {\r\n    console.error('Erro ao buscar jogadores:', error instanceof Error ? error.message : JSON.stringify(error))\r\n    return NextResponse.json({ error: 'Erro ao buscar jogadores' }, { status: 500 })\r\n  }\r\n}\r\n\r\nexport async function POST(request: Request) {\r\n  try {\r\n    // Atualize aqui para os campos minúsculos\r\n    const body = await request.json()\r\n    const novoJogador = {\r\n      nome: body.nome,\r\n      pontos: body.pontos,\r\n      saldogols: body.saldogols,\r\n      vitorias: body.vitorias,\r\n      derrotas: body.derrotas,\r\n    }\r\n\r\n    const { data, error } = await supabase\r\n      .from('jogadores')\r\n      .insert([novoJogador])\r\n      .select()\r\n      .single()\r\n\r\n    if (error) throw error\r\n\r\n    const jogador = data as Jogador\r\n\r\n    return NextResponse.json(jogador, { status: 201 })\r\n  } catch (error) {\r\n    console.error('Erro ao salvar jogador:', error instanceof Error ? error.message : JSON.stringify(error))\r\n    return NextResponse.json({ error: 'Erro ao salvar jogador' }, { status: 500 })\r\n  }\r\n}\r\n\r\nexport async function PUT(request: Request) {\r\n  try {\r\n    const body = await request.json()\r\n\r\n    if (!body.id) {\r\n      return NextResponse.json({ error: 'ID do jogador é obrigatório' }, { status: 400 })\r\n    }\r\n\r\n    const jogadorAtualizado = {\r\n      nome: body.nome,\r\n      pontos: body.pontos,\r\n      saldogols: body.saldogols,\r\n      vitorias: body.vitorias,\r\n      derrotas: body.derrotas,\r\n    }\r\n\r\n    const { data, error } = await supabase\r\n      .from('jogadores')\r\n      .update(jogadorAtualizado)\r\n      .eq('id', body.id)\r\n      .select()\r\n      .single()\r\n\r\n    if (error) throw error\r\n\r\n    const jogador = data as Jogador\r\n\r\n    return NextResponse.json(jogador)\r\n  } catch (error) {\r\n    console.error('Erro ao atualizar jogador:', error instanceof Error ? error.message : JSON.stringify(error))\r\n    return NextResponse.json({ error: 'Erro ao atualizar jogador' }, { status: 500 })\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAGO,MAAM,SAAS;IACpB,SAAS;AACX;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,8HAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,aACL,MAAM,CAAC,KACP,KAAK,CAAC,MAAM;YAAE,WAAW;QAAK;QAEjC,IAAI,OAAO,MAAM;QAEjB,MAAM,YAAY,QAAQ,EAAE;QAE5B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B,iBAAiB,QAAQ,MAAM,OAAO,GAAG,KAAK,SAAS,CAAC;QACnG,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA2B,GAAG;YAAE,QAAQ;QAAI;IAChF;AACF;AAEO,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,0CAA0C;QAC1C,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,cAAc;YAClB,MAAM,KAAK,IAAI;YACf,QAAQ,KAAK,MAAM;YACnB,WAAW,KAAK,SAAS;YACzB,UAAU,KAAK,QAAQ;YACvB,UAAU,KAAK,QAAQ;QACzB;QAEA,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,8HAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,aACL,MAAM,CAAC;YAAC;SAAY,EACpB,MAAM,GACN,MAAM;QAET,IAAI,OAAO,MAAM;QAEjB,MAAM,UAAU;QAEhB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,SAAS;YAAE,QAAQ;QAAI;IAClD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B,iBAAiB,QAAQ,MAAM,OAAO,GAAG,KAAK,SAAS,CAAC;QACjG,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAyB,GAAG;YAAE,QAAQ;QAAI;IAC9E;AACF;AAEO,eAAe,IAAI,OAAgB;IACxC,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAE/B,IAAI,CAAC,KAAK,EAAE,EAAE;YACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA8B,GAAG;gBAAE,QAAQ;YAAI;QACnF;QAEA,MAAM,oBAAoB;YACxB,MAAM,KAAK,IAAI;YACf,QAAQ,KAAK,MAAM;YACnB,WAAW,KAAK,SAAS;YACzB,UAAU,KAAK,QAAQ;YACvB,UAAU,KAAK,QAAQ;QACzB;QAEA,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,8HAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,aACL,MAAM,CAAC,mBACP,EAAE,CAAC,MAAM,KAAK,EAAE,EAChB,MAAM,GACN,MAAM;QAET,IAAI,OAAO,MAAM;QAEjB,MAAM,UAAU;QAEhB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B,iBAAiB,QAAQ,MAAM,OAAO,GAAG,KAAK,SAAS,CAAC;QACpG,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA4B,GAAG;YAAE,QAAQ;QAAI;IACjF;AACF","debugId":null}}]
}