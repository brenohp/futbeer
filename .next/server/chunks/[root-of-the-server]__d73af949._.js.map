{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/breno/OneDrive/Projetos/futbeer/src/app/api/jogadores/%5Bid%5D/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\r\nimport fs from 'fs'\r\nimport path from 'path'\r\n\r\nconst jsonPath = path.resolve(process.cwd(), 'src/app/data/jogadores.json')\r\n\r\ninterface Jogador {\r\n  id: string\r\n  nome: string\r\n  pontos: number\r\n  saldoGols: number\r\n  vitorias: number\r\n  derrotas: number\r\n}\r\n\r\nexport async function PUT(\r\n  request: Request,\r\n  { params }: { params: { id: string } } \r\n) {\r\n  try {\r\n    const resolvedParams = await params\r\n    const id = resolvedParams.id\r\n\r\n    const jogadorAtualizado: Jogador = await request.json()\r\n\r\n    const data = fs.readFileSync(jsonPath, 'utf-8')\r\n    const jogadores: Jogador[] = JSON.parse(data)\r\n\r\n    const index = jogadores.findIndex((j) => j.id === id)\r\n    if (index === -1) {\r\n      return NextResponse.json({ error: 'Jogador não encontrado' }, { status: 404 })\r\n    }\r\n\r\n    jogadores[index] = { ...jogadores[index], ...jogadorAtualizado, id } // garante que o id não será alterado\r\n\r\n    fs.writeFileSync(jsonPath, JSON.stringify(jogadores, null, 2))\r\n\r\n    return NextResponse.json(jogadores[index])\r\n  } catch (error) {\r\n    console.error('Erro ao atualizar jogador:', error)\r\n    return NextResponse.json({ error: 'Erro ao atualizar jogador' }, { status: 500 })\r\n  }\r\n}\r\n\r\nexport async function DELETE(\r\n  request: Request,\r\n  { params }: { params: { id: string } }\r\n) {\r\n  try {\r\n    const resolvedParams = await params\r\n    const id = resolvedParams.id\r\n\r\n    const data = fs.readFileSync(jsonPath, 'utf-8')\r\n    const jogadores: Jogador[] = JSON.parse(data)\r\n\r\n    const index = jogadores.findIndex((j) => j.id === id)\r\n    if (index === -1) {\r\n      return NextResponse.json({ error: 'Jogador não encontrado' }, { status: 404 })\r\n    }\r\n\r\n    jogadores.splice(index, 1)\r\n\r\n    fs.writeFileSync(jsonPath, JSON.stringify(jogadores, null, 2))\r\n\r\n    return NextResponse.json({ message: 'Jogador excluído com sucesso' }, { status: 200 })\r\n  } catch (error) {\r\n    console.error('Erro ao deletar jogador:', error)\r\n    return NextResponse.json({ error: 'Erro ao deletar jogador' }, { status: 500 })\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEA,MAAM,WAAW,iGAAA,CAAA,UAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI;AAWtC,eAAe,IACpB,OAAgB,EAChB,EAAE,MAAM,EAA8B;IAEtC,IAAI;QACF,MAAM,iBAAiB,MAAM;QAC7B,MAAM,KAAK,eAAe,EAAE;QAE5B,MAAM,oBAA6B,MAAM,QAAQ,IAAI;QAErD,MAAM,OAAO,6FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,UAAU;QACvC,MAAM,YAAuB,KAAK,KAAK,CAAC;QAExC,MAAM,QAAQ,UAAU,SAAS,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK;QAClD,IAAI,UAAU,CAAC,GAAG;YAChB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAyB,GAAG;gBAAE,QAAQ;YAAI;QAC9E;QAEA,SAAS,CAAC,MAAM,GAAG;YAAE,GAAG,SAAS,CAAC,MAAM;YAAE,GAAG,iBAAiB;YAAE;QAAG,EAAE,qCAAqC;;QAE1G,6FAAA,CAAA,UAAE,CAAC,aAAa,CAAC,UAAU,KAAK,SAAS,CAAC,WAAW,MAAM;QAE3D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM;IAC3C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA4B,GAAG;YAAE,QAAQ;QAAI;IACjF;AACF;AAEO,eAAe,OACpB,OAAgB,EAChB,EAAE,MAAM,EAA8B;IAEtC,IAAI;QACF,MAAM,iBAAiB,MAAM;QAC7B,MAAM,KAAK,eAAe,EAAE;QAE5B,MAAM,OAAO,6FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,UAAU;QACvC,MAAM,YAAuB,KAAK,KAAK,CAAC;QAExC,MAAM,QAAQ,UAAU,SAAS,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK;QAClD,IAAI,UAAU,CAAC,GAAG;YAChB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAyB,GAAG;gBAAE,QAAQ;YAAI;QAC9E;QAEA,UAAU,MAAM,CAAC,OAAO;QAExB,6FAAA,CAAA,UAAE,CAAC,aAAa,CAAC,UAAU,KAAK,SAAS,CAAC,WAAW,MAAM;QAE3D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAA+B,GAAG;YAAE,QAAQ;QAAI;IACtF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA0B,GAAG;YAAE,QAAQ;QAAI;IAC/E;AACF","debugId":null}}]
}