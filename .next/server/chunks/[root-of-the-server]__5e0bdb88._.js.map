{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/breno/OneDrive/Projetos/futbeer/src/app/api/partidas/route.ts"],"sourcesContent":["import fs from 'fs';\r\nimport path from 'path';\r\n\r\nconst jsonPath = path.resolve(process.cwd(), 'src/app/data/partidas.json');\r\nexport const config = {\r\n  runtime: 'node',\r\n};\r\n\r\nexport type Partida = {\r\n  id: string;\r\n  time1: string;\r\n  jogadoresTime1?: string;\r\n  golsTime1: number;\r\n  time2: string;\r\n  jogadoresTime2?: string;\r\n  golsTime2: number;\r\n  data: string;\r\n};\r\n\r\nexport async function GET() {\r\n  try {\r\n    const data = fs.readFileSync(jsonPath, 'utf-8');\r\n    const partidas: Partida[] = JSON.parse(data);\r\n    return new Response(JSON.stringify(partidas), { status: 200 });\r\n  } catch (error) {\r\n    console.error('Erro ao ler partidas:', (error as Error).message);\r\n    return new Response(JSON.stringify({ error: 'Erro ao ler partidas' }), { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function POST(request: Request) {\r\n  try {\r\n    const newPartida = await request.json() as Partida;\r\n\r\n    const data = fs.readFileSync(jsonPath, 'utf-8');\r\n    const partidas: Partida[] = JSON.parse(data);\r\n\r\n    const newId = partidas.length > 0\r\n      ? (Math.max(...partidas.map(p => Number(p.id))) + 1).toString()\r\n      : '1';\r\n    newPartida.id = newId;\r\n\r\n    partidas.push(newPartida);\r\n\r\n    fs.writeFileSync(jsonPath, JSON.stringify(partidas, null, 2));\r\n\r\n    return new Response(JSON.stringify(newPartida), { status: 201 });\r\n  } catch (error) {\r\n    console.error('Erro ao salvar partida:', (error as Error).message);\r\n    return new Response(JSON.stringify({ error: 'Erro ao salvar partida' }), { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function PUT(request: Request) {\r\n  try {\r\n    const updatedPartida = await request.json() as Partida;\r\n\r\n    const data = fs.readFileSync(jsonPath, 'utf-8');\r\n    let partidas: Partida[] = JSON.parse(data);\r\n\r\n    partidas = partidas.map(p => (p.id === updatedPartida.id ? updatedPartida : p));\r\n\r\n    fs.writeFileSync(jsonPath, JSON.stringify(partidas, null, 2));\r\n\r\n    return new Response(JSON.stringify(updatedPartida), { status: 200 });\r\n  } catch (error) {\r\n    console.error('Erro ao atualizar partida:', (error as Error).message);\r\n    return new Response(JSON.stringify({ error: 'Erro ao atualizar partida' }), { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAEA,MAAM,WAAW,iGAAA,CAAA,UAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI;AACtC,MAAM,SAAS;IACpB,SAAS;AACX;AAaO,eAAe;IACpB,IAAI;QACF,MAAM,OAAO,6FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,UAAU;QACvC,MAAM,WAAsB,KAAK,KAAK,CAAC;QACvC,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC,WAAW;YAAE,QAAQ;QAAI;IAC9D,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB,AAAC,MAAgB,OAAO;QAC/D,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;YAAE,OAAO;QAAuB,IAAI;YAAE,QAAQ;QAAI;IACvF;AACF;AAEO,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,aAAa,MAAM,QAAQ,IAAI;QAErC,MAAM,OAAO,6FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,UAAU;QACvC,MAAM,WAAsB,KAAK,KAAK,CAAC;QAEvC,MAAM,QAAQ,SAAS,MAAM,GAAG,IAC5B,CAAC,KAAK,GAAG,IAAI,SAAS,GAAG,CAAC,CAAA,IAAK,OAAO,EAAE,EAAE,MAAM,CAAC,EAAE,QAAQ,KAC3D;QACJ,WAAW,EAAE,GAAG;QAEhB,SAAS,IAAI,CAAC;QAEd,6FAAA,CAAA,UAAE,CAAC,aAAa,CAAC,UAAU,KAAK,SAAS,CAAC,UAAU,MAAM;QAE1D,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC,aAAa;YAAE,QAAQ;QAAI;IAChE,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B,AAAC,MAAgB,OAAO;QACjE,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;YAAE,OAAO;QAAyB,IAAI;YAAE,QAAQ;QAAI;IACzF;AACF;AAEO,eAAe,IAAI,OAAgB;IACxC,IAAI;QACF,MAAM,iBAAiB,MAAM,QAAQ,IAAI;QAEzC,MAAM,OAAO,6FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,UAAU;QACvC,IAAI,WAAsB,KAAK,KAAK,CAAC;QAErC,WAAW,SAAS,GAAG,CAAC,CAAA,IAAM,EAAE,EAAE,KAAK,eAAe,EAAE,GAAG,iBAAiB;QAE5E,6FAAA,CAAA,UAAE,CAAC,aAAa,CAAC,UAAU,KAAK,SAAS,CAAC,UAAU,MAAM;QAE1D,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC,iBAAiB;YAAE,QAAQ;QAAI;IACpE,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B,AAAC,MAAgB,OAAO;QACpE,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;YAAE,OAAO;QAA4B,IAAI;YAAE,QAAQ;QAAI;IAC5F;AACF","debugId":null}}]
}