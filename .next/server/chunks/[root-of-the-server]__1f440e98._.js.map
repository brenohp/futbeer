{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/breno/OneDrive/Projetos/futbeer/src/lib/supabaseClient.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\r\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM;AACN,MAAM;AAEC,MAAM,WAAW,CAAA,GAAA,yLAAA,CAAA,eAAY,AAAD,EAAE,aAAa","debugId":null}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/breno/OneDrive/Projetos/futbeer/src/app/api/partidas/%5Bid%5D/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\r\nimport { supabase } from '@/lib/supabaseClient'\r\n\r\nexport const config = {\r\n  runtime: 'node', // edge funciona, mas node é mais confiável com supabase\r\n}\r\n\r\nexport async function DELETE(_: Request, context: { params: { id: string } }) {\r\n  try {\r\n    const params = await context.params\r\n    const idNum = parseInt(params.id, 10)\r\n    if (isNaN(idNum)) {\r\n      return NextResponse.json({ error: 'ID inválido' }, { status: 400 })\r\n    }\r\n\r\n    const { data, error } = await supabase\r\n      .from('partidas')\r\n      .delete()\r\n      .eq('id', idNum)\r\n      .select('*')\r\n\r\n    if (error) throw error\r\n\r\n    if (!data || data.length === 0) {\r\n      return NextResponse.json({ error: 'Partida não encontrada' }, { status: 404 })\r\n    }\r\n\r\n    return NextResponse.json({ message: 'Partida excluída com sucesso' })\r\n  } catch (error) {\r\n    console.error('Erro ao deletar partida:', error instanceof Error ? error.message : JSON.stringify(error))\r\n    return NextResponse.json({ error: 'Erro ao deletar partida' }, { status: 500 })\r\n  }\r\n}\r\n\r\nexport async function PUT(request: Request, context: { params: { id: string } }) {\r\n  try {\r\n    const params = await context.params\r\n    const idNum = parseInt(params.id, 10)\r\n    if (isNaN(idNum)) {\r\n      return NextResponse.json({ error: 'ID inválido' }, { status: 400 })\r\n    }\r\n\r\n    const body = await request.json()\r\n\r\n    const updatedPartida = {\r\n      time1: body.time1,\r\n      jogadorestime1: body.jogadorestime1,\r\n      golstime1: body.golstime1,\r\n      time2: body.time2,\r\n      jogadorestime2: body.jogadorestime2,\r\n      golstime2: body.golstime2,\r\n      data: body.data,\r\n    }\r\n\r\n    const { data, error } = await supabase\r\n      .from('partidas')\r\n      .update(updatedPartida)\r\n      .eq('id', idNum)\r\n      .select()\r\n      .single()\r\n\r\n    if (error) throw error\r\n\r\n    return NextResponse.json(data)\r\n  } catch (error) {\r\n    console.error('Erro ao atualizar partida:', error instanceof Error ? error.message : JSON.stringify(error))\r\n    return NextResponse.json({ error: 'Erro ao atualizar partida' }, { status: 500 })\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;AAEO,MAAM,SAAS;IACpB,SAAS;AACX;AAEO,eAAe,OAAO,CAAU,EAAE,OAAmC;IAC1E,IAAI;QACF,MAAM,SAAS,MAAM,QAAQ,MAAM;QACnC,MAAM,QAAQ,SAAS,OAAO,EAAE,EAAE;QAClC,IAAI,MAAM,QAAQ;YAChB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAc,GAAG;gBAAE,QAAQ;YAAI;QACnE;QAEA,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,8HAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,YACL,MAAM,GACN,EAAE,CAAC,MAAM,OACT,MAAM,CAAC;QAEV,IAAI,OAAO,MAAM;QAEjB,IAAI,CAAC,QAAQ,KAAK,MAAM,KAAK,GAAG;YAC9B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAyB,GAAG;gBAAE,QAAQ;YAAI;QAC9E;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAA+B;IACrE,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4BAA4B,iBAAiB,QAAQ,MAAM,OAAO,GAAG,KAAK,SAAS,CAAC;QAClG,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA0B,GAAG;YAAE,QAAQ;QAAI;IAC/E;AACF;AAEO,eAAe,IAAI,OAAgB,EAAE,OAAmC;IAC7E,IAAI;QACF,MAAM,SAAS,MAAM,QAAQ,MAAM;QACnC,MAAM,QAAQ,SAAS,OAAO,EAAE,EAAE;QAClC,IAAI,MAAM,QAAQ;YAChB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAc,GAAG;gBAAE,QAAQ;YAAI;QACnE;QAEA,MAAM,OAAO,MAAM,QAAQ,IAAI;QAE/B,MAAM,iBAAiB;YACrB,OAAO,KAAK,KAAK;YACjB,gBAAgB,KAAK,cAAc;YACnC,WAAW,KAAK,SAAS;YACzB,OAAO,KAAK,KAAK;YACjB,gBAAgB,KAAK,cAAc;YACnC,WAAW,KAAK,SAAS;YACzB,MAAM,KAAK,IAAI;QACjB;QAEA,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,8HAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,YACL,MAAM,CAAC,gBACP,EAAE,CAAC,MAAM,OACT,MAAM,GACN,MAAM;QAET,IAAI,OAAO,MAAM;QAEjB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B,iBAAiB,QAAQ,MAAM,OAAO,GAAG,KAAK,SAAS,CAAC;QACpG,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA4B,GAAG;YAAE,QAAQ;QAAI;IACjF;AACF","debugId":null}}]
}